<!DOCTYPE html>
<html lang="en">

    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>OverView</title>
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.1/css/all.min.css"
            integrity="sha512-DTOQO9RWCH3ppGqcWaEA1BIZOC6xxalwEsw9c2QQeAIftl+Vegovlnee1c9QX4TctnWMn13TZye+giMm8e2LwA=="
            crossorigin="anonymous" referrerpolicy="no-referrer" />
        <link rel="stylesheet" href="./assets/css/style.css">
    </head>

    <body>
        <div class="overviews">
            <div class="container">
                <div class=" overviews__title">
                    <h4>OverView</h4>
                </div>
                <div class="box__img">
                    <img src="./assets/images/8Puzzle.JPG" alt="">
                </div>
                <div class="overview__card">
                    <h4>Breadth-First Search (BFS):</h4>
                    <p class="desc">
                        Is an algorithm for traversing or searching tree or graph data structures.It starts at the tree
                        root(or some arbitrary
                        node of a graph, sometimes referred to as a 'search key), and explores all of the neighbor nodes
                        at the present depth
                        prior to moving on to the nodes at the next depth level. It uses the opposite strategy as depth
                        - first search, which
                        instead explores the highest - depth nodes first before being forced to backtrack and expand
                        shallower nodes. BFS and
                        its application in finding connected components of graphs were invented in 1945 by Konrad Zuse
                        and Michael Burke, in
                        their(rejected) Ph.D.thesis on the Plankalkül programming language, but this was not published
                        until 1972. It was
                        reinvented in 1959 by Edward F.Moore, who used it to find the shortest path out of a maze, and
                        later developed by
                        C.Y.Lee into a wire routing algorithm(published 1961).
                    </p>
                </div>
                <div class="overview__card">
                    <h4>A Star (A*):</h4>
                    <p class="desc">
                        A* (pronounced as "A star") is a computer algorithm that is widely used in path finding and
                        graph traversal, which is
                        the process of plotting an efficiently directed path between multiple points, called \"nodes\".
                        It enjoys widespread use
                        due to its performance and accuracy. However, in practical travel-routing systems, it is
                        generally outperformed by
                        algorithms which can pre-process the graph to attain better performance, although other work has
                        found A* to be superior
                        to other approaches. Peter Hart, Nils Nilsson and Bertram Raphael of Stanford Research
                        Institute(now SRI International)
                        first published the algorithm in 1968.[3] It is an extension of Edsger Dijkstra's 1959
                        algorithm. A* achieves better
                        performance by using heuristics to guide its search.
                    </p>
                </div>
                <div class="overview__card">
                    <h4>Depth-First Search (DFS):</h4>
                    <p class="desc">
                        Is an algorithm for traversing or searching tree or graph data structures.The algorithm starts
                        at the root node and
                        explores as far as possible along each branch before backtracking. A version of depth - first
                        search was investigated in
                        the 19th century by French mathematician Charles Pierre Trémaux as a strategy for solving mazes.
                    </p>
                </div>
                <div class="overview__card">
                    <h4>greedy algorithm</h4>
                    <p class="desc">
                        A greedy algorithm is any algorithm that follows the problem - solving heuristic of making the
                        locally optimal choice at
                        each stage.In many problems, a greedy strategy does not produce an optimal solution, but a
                        greedy heuristic can yield
                        locally optimal solutions that approximate a globally optimal solution in a reasonable amount of
                        time.For example, a
                        greedy strategy for the traveling salesman problem(which is of high computational complexity) is
                        the following
                        heuristic:"A teach step of the journey, visit the nearest unvisited city." This heuristic does
                        not intend to find the
                        best solution, but it terminates in a reasonable number of steps; finding an optimal solution to
                        such a complex problem
                        typically requires unreasonably many steps.In mathematical optimization, greedy algorithms
                        optimally solve combinatorial
                        problems having the properties of matroids and give constant - factor approximations to
                        optimization problems with the
                        submodular structure.
                    </p>
                </div>
            </div>
        </div>
    </body>

</html>